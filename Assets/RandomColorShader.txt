Shader "RandomColorShader" {
 Properties {
 _Color ("Main Color", Color) = (1,1,1,1)
 _Speed ("Speed", Range(0.0, 10.0)) = 1.0
 }
 SubShader {
 Tags { "Queue" = "Transparent" }
 Pass {
 CGPROGRAM
 #pragma vertex vert
 #pragma fragment frag
 #include "UnityCG.cginc"
 struct appdata {
 float4 vertex : POSITION;
 float4 color : COLOR;
 };
 struct v2f {
 float4 color : COLOR;
 float4 vertex : SV_POSITION;
 };
 float _Speed;
 v2f vert (appdata v) {
 v.color = _Color;
 v.color.a = 1.0 - (v.vertex.y * 0.5 + 0.5);
 v.vertex.x += sin(Time.time * _Speed + v.vertex.y) * 0.1;
 v.vertex.y += cos(Time.time * _Speed + v.vertex.x) * 0.1;
 v2f o;
 o.vertex = UnityObjectToClipPos(v.vertex);
 o.color = v.color;
 return o;
 }
 float4 frag (v2f i) : COLOR {
 return i.color;
 }
 ENDCG
 }
 }
 FallBack Off
 }
